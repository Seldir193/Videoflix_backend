# .github/workflows/backend-ci.yml
name: ðŸ§ª Backend CI  (Build + Migrate + Tests)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    ###################################
    # Postgres-Service (nur fÃ¼r CI)   #
    ###################################
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: videoflix_ci
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd="pg_isready -U test -d videoflix_ci"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    ###################################
    # Matrix â€“ teste 3.11 & 3.12      #
    ###################################
    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # optional: pip-Cache fÃ¼r schnellere Builds
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run migrations
        env:
          DATABASE_URL: postgres://test:test@localhost:5432/videoflix_ci
          DJANGO_SETTINGS_MODULE: video_backend.settings
        run: python manage.py migrate --noinput

      - name: Run tests
        env:
          DATABASE_URL: postgres://test:test@localhost:5432/videoflix_ci
          DJANGO_SETTINGS_MODULE: video_backend.settings
        run: python manage.py test --verbosity 2
