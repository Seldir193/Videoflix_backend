name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    ###################################
    # Postgres-Service (Container)    #
    ###################################
    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: videoflix_db
          POSTGRES_USER: real_db_user           # ← Klartext
          POSTGRES_PASSWORD: very_secret_pw     # ← Klartext
        options: >-
          --health-cmd="pg_isready -U real_db_user -d videoflix_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    ###################################
    # Umgebungs­variablen für Django  #
    ###################################
    env:
      SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}   # einziges Secret!
      DEBUG: "False"
      DB_NAME: videoflix_db
      DB_USER: real_db_user
      DB_PASSWORD: very_secret_pw
      DB_HOST: localhost        # Service-Hostname
      DB_PORT: "5432"

    ###################################
    # Testmatrix: Python 3.11 + 3.12  #
    ###################################
    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Postgres (max. 1 min)
        run: |
          for i in {1..20}; do
            PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -U $DB_USER -d $DB_NAME -c '\q' && break
            echo "Postgres not ready yet ($i/20)…"
            sleep 3
          done

      - name: Run migrations
        run: python manage.py migrate --noinput

      - name: Run tests
        run: python manage.py test


