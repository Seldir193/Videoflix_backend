name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest            # GitHub-Runner
    timeout-minutes: 20

    # üîë  SECRET_KEY kommt aus dem Repository-Secret  DJANGO_SECRET_KEY
    env:
      SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      # Code auschecken
      - uses: actions/checkout@v4

      # Python installieren
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # (optional) pip-Cache ‚Äì beschleunigt Folgel√§ufe
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      # üîç DEBUG-SCHRITT ‚Äì zeigt, ob SECRET_KEY wirklich ankommt
      - name: Debug SECRET_KEY
        run: |
          echo "Runner-OS      : $RUNNER_OS"
          echo "Secret length  : ${#SECRET_KEY}"
          echo "Preview        : ${SECRET_KEY:0:4}****"
        # eigenes env-Block, um sicher zu sein, dass das Secret hier verf√ºgbar ist
        env:
          SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}

      # Abh√§ngigkeiten installieren
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # (optional) Migrationen, falls Tests DB brauchen
      - name: Django migrate
        run: python manage.py migrate --noinput

      # Tests ausf√ºhren
      - name: Run tests
        run: python manage.py test
