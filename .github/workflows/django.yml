# .github/workflows/django.yml
name: Django CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres:14
        ports: [5432:5432]
        env:
          POSTGRES_DB: videoflix_db
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.DB_USER }} -d videoflix_db"
          --health-interval=10s --health-timeout=5s --health-retries=5

    env:                       # ← alles, was Django braucht
      SECRET_KEY:   ${{ secrets.DJANGO_SECRET_KEY }}
      DEBUG:        "False"    # in CI lieber aus
      DB_NAME:      videoflix_db
      DB_USER:      ${{ secrets.DB_USER }}
      DB_PASSWORD:  ${{ secrets.DB_PASSWORD }}
      DB_HOST:      localhost  # Service-Hostname
      DB_PORT:      5432
      REDIS_HOST:   redis      # falls du später Redis ergänzt
      REDIS_PORT:   6379
      REDIS_DB:     0

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Postgres
        run: |
          for i in {1..20}; do
            PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -U $DB_USER -d $DB_NAME -c '\q' && break
            echo "Postgres not ready ($i/20)…"; sleep 3
          done

      - run: python manage.py migrate --noinput
      - run: python manage.py test

